Terminals which are not used

   PREPROC
   MTYPE
   LABEL
   NON_ATOMIC


Grammar

    0 $accept: program $end

    1 program: units

    2 units: unit
    3      | units unit

    4 unit: proc
    5     | init
    6     | claim
    7     | ltl
    8     | events
    9     | one_decl
   10     | utype
   11     | c_fcts
   12     | ns
   13     | semi
   14     | error

   15 l_par: '('

   16 r_par: ')'

   17 @1: /* empty */

   18 @2: /* empty */

   19 proc: inst proctype NAME @1 l_par decl r_par @2 Opt_priority Opt_enabler body

   20 proctype: PROCTYPE
   21         | D_PROCTYPE

   22 inst: /* empty */
   23     | ACTIVE
   24     | ACTIVE '[' const_expr ']'
   25     | ACTIVE '[' NAME ']'

   26 @3: /* empty */

   27 init: INIT @3 Opt_priority body

   28 @4: /* empty */

   29 ltl: LTL optname2 @4 ltl_body

   30 ltl_body: '{' full_expr OS '}'
   31         | error

   32 @5: /* empty */

   33 claim: CLAIM optname @5 body

   34 optname: /* empty */
   35        | NAME

   36 optname2: /* empty */
   37         | NAME

   38 @6: /* empty */

   39 events: TRACE @6 body

   40 @7: /* empty */

   41 utype: TYPEDEF NAME '{' @7 decl_lst '}'

   42 nm: NAME
   43   | INAME

   44 @8: /* empty */

   45 ns: INLINE nm l_par @8 args r_par

   46 c_fcts: ccode
   47       | cstate

   48 cstate: C_STATE STRING STRING
   49       | C_TRACK STRING STRING
   50       | C_STATE STRING STRING STRING
   51       | C_TRACK STRING STRING STRING

   52 ccode: C_CODE
   53      | C_DECL

   54 cexpr: C_EXPR

   55 @9: /* empty */

   56 @10: /* empty */

   57 body: '{' @9 sequence OS @10 '}'

   58 sequence: step
   59         | sequence MS step

   60 step: one_decl
   61     | XU vref_lst
   62     | NAME ':' one_decl
   63     | NAME ':' XU
   64     | stmnt

   65 @11: /* empty */

   66 step: stmnt UNLESS @11 stmnt

   67 vis: /* empty */
   68    | HIDDEN
   69    | SHOW
   70    | ISLOCAL

   71 asgn: /* empty */
   72     | ASGN

   73 one_decl: vis TYPE var_list
   74         | vis UNAME var_list
   75         | vis TYPE asgn '{' nlst '}'

   76 decl_lst: one_decl
   77         | one_decl SEMI decl_lst

   78 decl: /* empty */
   79     | decl_lst

   80 vref_lst: varref
   81         | varref ',' vref_lst

   82 var_list: ivar
   83         | ivar ',' var_list

   84 c_list: CONST
   85       | CONST ',' c_list

   86 ivar: vardcl
   87     | vardcl ASGN '{' c_list '}'
   88     | vardcl ASGN expr
   89     | vardcl ASGN ch_init

   90 ch_init: '[' const_expr ']' OF '{' typ_list '}'

   91 vardcl: NAME
   92       | NAME ':' CONST
   93       | NAME '[' const_expr ']'
   94       | NAME '[' NAME ']'

   95 varref: cmpnd

   96 pfld: NAME

   97 @12: /* empty */

   98 pfld: NAME @12 '[' expr ']'

   99 @13: /* empty */

  100 cmpnd: pfld @13 sfld

  101 sfld: /* empty */
  102     | '.' cmpnd

  103 stmnt: Special
  104      | Stmnt

  105 @14: /* empty */

  106 for_pre: FOR l_par @14 varref

  107 for_post: '{' sequence OS '}'

  108 @15: /* empty */

  109 Special: varref RCV @15 rargs

  110 @16: /* empty */

  111 Special: varref SND @16 margs

  112 @17: /* empty */

  113 Special: for_pre ':' expr DOTDOT expr r_par @17 for_post

  114 @18: /* empty */

  115 Special: for_pre IN varref r_par @18 for_post
  116        | SELECT l_par varref ':' expr DOTDOT expr r_par
  117        | IF options FI

  118 @19: /* empty */

  119 Special: DO @19 options OD
  120        | BREAK
  121        | GOTO NAME
  122        | NAME ':' stmnt
  123        | NAME ':'
  124        | error

  125 Stmnt: varref ASGN full_expr
  126      | varref INCR
  127      | varref DECR
  128      | SET_P l_par two_args r_par

  129 @20: /* empty */

  130 Stmnt: PRINT l_par STRING @20 prargs r_par
  131      | PRINTM l_par varref r_par
  132      | PRINTM l_par CONST r_par
  133      | ASSERT full_expr
  134      | ccode

  135 @21: /* empty */

  136 Stmnt: varref R_RCV @21 rargs

  137 @22: /* empty */

  138 Stmnt: varref RCV @22 LT rargs GT

  139 @23: /* empty */

  140 Stmnt: varref R_RCV @23 LT rargs GT

  141 @24: /* empty */

  142 Stmnt: varref O_SND @24 margs
  143      | full_expr
  144      | ELSE

  145 @25: /* empty */

  146 Stmnt: ATOMIC '{' @25 sequence OS '}'

  147 @26: /* empty */

  148 Stmnt: D_STEP '{' @26 sequence OS '}'

  149 @27: /* empty */

  150 Stmnt: '{' @27 sequence OS '}'

  151 @28: /* empty */

  152 @29: /* empty */

  153 Stmnt: INAME @28 l_par args r_par @29 Stmnt

  154 @30: /* empty */

  155 @31: /* empty */

  156 Stmnt: varref ASGN INAME @30 l_par args r_par @31 Stmnt
  157      | RETURN full_expr

  158 options: option
  159        | option options

  160 @32: /* empty */

  161 option: SEP @32 sequence OS

  162 OS: /* empty */
  163   | semi

  164 semi: SEMI
  165     | ARROW

  166 MS: semi
  167   | MS semi

  168 aname: NAME
  169      | PNAME

  170 const_expr: CONST
  171           | '-' const_expr
  172           | l_par const_expr r_par
  173           | const_expr '+' const_expr
  174           | const_expr '-' const_expr
  175           | const_expr '*' const_expr
  176           | const_expr '/' const_expr
  177           | const_expr '%' const_expr

  178 expr: l_par expr r_par
  179     | expr '+' expr
  180     | expr '-' expr
  181     | expr '*' expr
  182     | expr '/' expr
  183     | expr '%' expr
  184     | expr '&' expr
  185     | expr '^' expr
  186     | expr '|' expr
  187     | expr GT expr
  188     | expr LT expr
  189     | expr GE expr
  190     | expr LE expr
  191     | expr EQ expr
  192     | expr NE expr
  193     | expr AND expr
  194     | expr OR expr
  195     | expr LSHIFT expr
  196     | expr RSHIFT expr
  197     | '~' expr
  198     | '-' expr
  199     | SND expr
  200     | l_par expr ARROW expr ':' expr r_par

  201 @33: /* empty */

  202 expr: RUN aname @33 l_par args r_par Opt_priority
  203     | LEN l_par varref r_par
  204     | ENABLED l_par expr r_par
  205     | GET_P l_par expr r_par

  206 @34: /* empty */

  207 expr: varref RCV @34 '[' rargs ']'

  208 @35: /* empty */

  209 expr: varref R_RCV @35 '[' rargs ']'
  210     | varref
  211     | cexpr
  212     | CONST
  213     | TIMEOUT
  214     | NONPROGRESS
  215     | PC_VAL l_par expr r_par
  216     | PNAME '[' expr ']' '@' NAME
  217     | PNAME '[' expr ']' ':' pfld
  218     | PNAME '@' NAME
  219     | PNAME ':' pfld
  220     | ltl_expr

  221 Opt_priority: /* empty */
  222             | PRIORITY CONST

  223 full_expr: expr
  224          | Expr

  225 ltl_expr: expr UNTIL expr
  226         | expr RELEASE expr
  227         | expr WEAK_UNTIL expr
  228         | expr IMPLIES expr
  229         | expr EQUIV expr
  230         | NEXT expr
  231         | ALWAYS expr
  232         | EVENTUALLY expr

  233 Expr: Probe
  234     | l_par Expr r_par
  235     | Expr AND Expr
  236     | Expr AND expr
  237     | expr AND Expr
  238     | Expr OR Expr
  239     | Expr OR expr
  240     | expr OR Expr

  241 Probe: FULL l_par varref r_par
  242      | NFULL l_par varref r_par
  243      | EMPTY l_par varref r_par
  244      | NEMPTY l_par varref r_par

  245 Opt_enabler: /* empty */
  246            | PROVIDED l_par full_expr r_par
  247            | PROVIDED error

  248 basetype: TYPE
  249         | UNAME
  250         | error

  251 typ_list: basetype
  252         | basetype ',' typ_list

  253 two_args: expr ',' expr

  254 args: /* empty */
  255     | arg

  256 prargs: /* empty */
  257       | ',' arg

  258 margs: arg
  259      | expr l_par arg r_par

  260 arg: expr
  261    | expr ',' arg

  262 rarg: varref
  263     | EVAL l_par expr r_par
  264     | CONST
  265     | '-' CONST

  266 rargs: rarg
  267      | rarg ',' rargs
  268      | rarg l_par rargs r_par
  269      | l_par rargs r_par

  270 nlst: NAME
  271     | nlst NAME
  272     | nlst ','


Terminals, with rules where they appear

$end (0) 0
'%' (37) 177 183
'&' (38) 184
'(' (40) 15
')' (41) 16
'*' (42) 175 181
'+' (43) 173 179
',' (44) 81 83 85 252 253 257 261 267 272
'-' (45) 171 174 180 198 265
'.' (46) 102
'/' (47) 176 182
':' (58) 62 63 92 113 116 122 123 200 217 219
'@' (64) 216 218
'[' (91) 24 25 90 93 94 98 207 209 216 217
']' (93) 24 25 90 93 94 98 207 209 216 217
'^' (94) 185
'{' (123) 30 41 57 75 87 90 107 146 148 150
'|' (124) 186
'}' (125) 30 41 57 75 87 90 107 146 148 150
'~' (126) 197
error (256) 14 31 124 247 250
ASSERT (258) 133
PRINT (259) 130
PRINTM (260) 131 132
PREPROC (261)
C_CODE (262) 52
C_DECL (263) 53
C_EXPR (264) 54
C_STATE (265) 48 50
C_TRACK (266) 49 51
RUN (267) 202
LEN (268) 203
ENABLED (269) 204
SET_P (270) 128
GET_P (271) 205
EVAL (272) 263
PC_VAL (273) 215
TYPEDEF (274) 41
MTYPE (275)
INLINE (276) 45
RETURN (277) 157
LABEL (278)
OF (279) 90
GOTO (280) 121
BREAK (281) 120
ELSE (282) 144
SEMI (283) 77 164
ARROW (284) 165 200
IF (285) 117
FI (286) 117
DO (287) 119
OD (288) 119
FOR (289) 106
SELECT (290) 116
IN (291) 115
SEP (292) 161
DOTDOT (293) 113 116
ATOMIC (294) 146
NON_ATOMIC (295)
D_STEP (296) 148
UNLESS (297) 66
TIMEOUT (298) 213
NONPROGRESS (299) 214
ACTIVE (300) 23 24 25
PROCTYPE (301) 20
D_PROCTYPE (302) 21
HIDDEN (303) 68
SHOW (304) 69
ISLOCAL (305) 70
PRIORITY (306) 222
PROVIDED (307) 246 247
FULL (308) 241
EMPTY (309) 243
NFULL (310) 242
NEMPTY (311) 244
CONST (312) 84 85 92 132 170 212 222 264 265
TYPE (313) 73 75 248
XU (314) 61 63
NAME (315) 19 25 35 37 41 42 62 63 91 92 93 94 96 98 121 122 123 168
    216 218 270 271
UNAME (316) 74 249
PNAME (317) 169 216 217 218 219
INAME (318) 43 153 156
STRING (319) 48 49 50 51 130
CLAIM (320) 33
TRACE (321) 39
INIT (322) 27
LTL (323) 29
ASGN (324) 72 87 88 89 125 156
R_RCV (325) 136 140 209
RCV (326) 109 138 207
O_SND (327) 142
SND (328) 111 199
EQUIV (329) 229
IMPLIES (330) 228
OR (331) 194 238 239 240
AND (332) 193 235 236 237
EVENTUALLY (333) 232
ALWAYS (334) 231
RELEASE (335) 226
WEAK_UNTIL (336) 227
UNTIL (337) 225
NEXT (338) 230
NE (339) 192
EQ (340) 191
LE (341) 190
GE (342) 189
LT (343) 138 140 188
GT (344) 138 140 187
RSHIFT (345) 196
LSHIFT (346) 195
DECR (347) 127
INCR (348) 126
NEG (349)
UMIN (350)
DOT (351)


Nonterminals, with rules where they appear

$accept (116)
    on left: 0
program (117)
    on left: 1, on right: 0
units (118)
    on left: 2 3, on right: 1 3
unit (119)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 3
l_par (120)
    on left: 15, on right: 19 45 106 116 128 130 131 132 153 156 172
    178 200 202 203 204 205 215 234 241 242 243 244 246 259 263 268
    269
r_par (121)
    on left: 16, on right: 19 45 113 115 116 128 130 131 132 153 156
    172 178 200 202 203 204 205 215 234 241 242 243 244 246 259 263
    268 269
proc (122)
    on left: 19, on right: 4
@1 (123)
    on left: 17, on right: 19
@2 (124)
    on left: 18, on right: 19
proctype (125)
    on left: 20 21, on right: 19
inst (126)
    on left: 22 23 24 25, on right: 19
init (127)
    on left: 27, on right: 5
@3 (128)
    on left: 26, on right: 27
ltl (129)
    on left: 29, on right: 7
@4 (130)
    on left: 28, on right: 29
ltl_body (131)
    on left: 30 31, on right: 29
claim (132)
    on left: 33, on right: 6
@5 (133)
    on left: 32, on right: 33
optname (134)
    on left: 34 35, on right: 33
optname2 (135)
    on left: 36 37, on right: 29
events (136)
    on left: 39, on right: 8
@6 (137)
    on left: 38, on right: 39
utype (138)
    on left: 41, on right: 10
@7 (139)
    on left: 40, on right: 41
nm (140)
    on left: 42 43, on right: 45
ns (141)
    on left: 45, on right: 12
@8 (142)
    on left: 44, on right: 45
c_fcts (143)
    on left: 46 47, on right: 11
cstate (144)
    on left: 48 49 50 51, on right: 47
ccode (145)
    on left: 52 53, on right: 46 134
cexpr (146)
    on left: 54, on right: 211
body (147)
    on left: 57, on right: 19 27 33 39
@9 (148)
    on left: 55, on right: 57
@10 (149)
    on left: 56, on right: 57
sequence (150)
    on left: 58 59, on right: 57 59 107 146 148 150 161
step (151)
    on left: 60 61 62 63 64 66, on right: 58 59
@11 (152)
    on left: 65, on right: 66
vis (153)
    on left: 67 68 69 70, on right: 73 74 75
asgn (154)
    on left: 71 72, on right: 75
one_decl (155)
    on left: 73 74 75, on right: 9 60 62 76 77
decl_lst (156)
    on left: 76 77, on right: 41 77 79
decl (157)
    on left: 78 79, on right: 19
vref_lst (158)
    on left: 80 81, on right: 61 81
var_list (159)
    on left: 82 83, on right: 73 74 83
c_list (160)
    on left: 84 85, on right: 85 87
ivar (161)
    on left: 86 87 88 89, on right: 82 83
ch_init (162)
    on left: 90, on right: 89
vardcl (163)
    on left: 91 92 93 94, on right: 86 87 88 89
varref (164)
    on left: 95, on right: 80 81 106 109 111 115 116 125 126 127 131
    136 138 140 142 156 203 207 209 210 241 242 243 244 262
pfld (165)
    on left: 96 98, on right: 100 217 219
@12 (166)
    on left: 97, on right: 98
cmpnd (167)
    on left: 100, on right: 95 102
@13 (168)
    on left: 99, on right: 100
sfld (169)
    on left: 101 102, on right: 100
stmnt (170)
    on left: 103 104, on right: 64 66 122
for_pre (171)
    on left: 106, on right: 113 115
@14 (172)
    on left: 105, on right: 106
for_post (173)
    on left: 107, on right: 113 115
Special (174)
    on left: 109 111 113 115 116 117 119 120 121 122 123 124,
    on right: 103
@15 (175)
    on left: 108, on right: 109
@16 (176)
    on left: 110, on right: 111
@17 (177)
    on left: 112, on right: 113
@18 (178)
    on left: 114, on right: 115
@19 (179)
    on left: 118, on right: 119
Stmnt (180)
    on left: 125 126 127 128 130 131 132 133 134 136 138 140 142 143
    144 146 148 150 153 156 157, on right: 104 153 156
@20 (181)
    on left: 129, on right: 130
@21 (182)
    on left: 135, on right: 136
@22 (183)
    on left: 137, on right: 138
@23 (184)
    on left: 139, on right: 140
@24 (185)
    on left: 141, on right: 142
@25 (186)
    on left: 145, on right: 146
@26 (187)
    on left: 147, on right: 148
@27 (188)
    on left: 149, on right: 150
@28 (189)
    on left: 151, on right: 153
@29 (190)
    on left: 152, on right: 153
@30 (191)
    on left: 154, on right: 156
@31 (192)
    on left: 155, on right: 156
options (193)
    on left: 158 159, on right: 117 119 159
option (194)
    on left: 161, on right: 158 159
@32 (195)
    on left: 160, on right: 161
OS (196)
    on left: 162 163, on right: 30 57 107 146 148 150 161
semi (197)
    on left: 164 165, on right: 13 163 166 167
MS (198)
    on left: 166 167, on right: 59 167
aname (199)
    on left: 168 169, on right: 202
const_expr (200)
    on left: 170 171 172 173 174 175 176 177, on right: 24 90 93 171
    172 173 174 175 176 177
expr (201)
    on left: 178 179 180 181 182 183 184 185 186 187 188 189 190 191
    192 193 194 195 196 197 198 199 200 202 203 204 205 207 209 210
    211 212 213 214 215 216 217 218 219 220, on right: 88 98 113 116
    178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193
    194 195 196 197 198 199 200 204 205 215 216 217 223 225 226 227
    228 229 230 231 232 236 237 239 240 253 259 260 261 263
@33 (202)
    on left: 201, on right: 202
@34 (203)
    on left: 206, on right: 207
@35 (204)
    on left: 208, on right: 209
Opt_priority (205)
    on left: 221 222, on right: 19 27 202
full_expr (206)
    on left: 223 224, on right: 30 125 133 143 157 246
ltl_expr (207)
    on left: 225 226 227 228 229 230 231 232, on right: 220
Expr (208)
    on left: 233 234 235 236 237 238 239 240, on right: 224 234 235
    236 237 238 239 240
Probe (209)
    on left: 241 242 243 244, on right: 233
Opt_enabler (210)
    on left: 245 246 247, on right: 19
basetype (211)
    on left: 248 249 250, on right: 251 252
typ_list (212)
    on left: 251 252, on right: 90 252
two_args (213)
    on left: 253, on right: 128
args (214)
    on left: 254 255, on right: 45 153 156 202
prargs (215)
    on left: 256 257, on right: 130
margs (216)
    on left: 258 259, on right: 111 142
arg (217)
    on left: 260 261, on right: 255 257 258 259 261
rarg (218)
    on left: 262 263 264 265, on right: 266 267 268
rargs (219)
    on left: 266 267 268 269, on right: 109 136 138 140 207 209 267
    268 269
nlst (220)
    on left: 270 271 272, on right: 75 271 272


state 0

    0 $accept: . program $end

    error    shift, and go to state 1
    C_CODE   shift, and go to state 2
    C_DECL   shift, and go to state 3
    C_STATE  shift, and go to state 4
    C_TRACK  shift, and go to state 5
    TYPEDEF  shift, and go to state 6
    INLINE   shift, and go to state 7
    SEMI     shift, and go to state 8
    ARROW    shift, and go to state 9
    ACTIVE   shift, and go to state 10
    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13
    CLAIM    shift, and go to state 14
    TRACE    shift, and go to state 15
    INIT     shift, and go to state 16
    LTL      shift, and go to state 17

    PROCTYPE    reduce using rule 22 (inst)
    D_PROCTYPE  reduce using rule 22 (inst)
    TYPE        reduce using rule 67 (vis)
    UNAME       reduce using rule 67 (vis)

    program   go to state 18
    units     go to state 19
    unit      go to state 20
    proc      go to state 21
    inst      go to state 22
    init      go to state 23
    ltl       go to state 24
    claim     go to state 25
    events    go to state 26
    utype     go to state 27
    ns        go to state 28
    c_fcts    go to state 29
    cstate    go to state 30
    ccode     go to state 31
    vis       go to state 32
    one_decl  go to state 33
    semi      go to state 34


state 1

   14 unit: error .

    $default  reduce using rule 14 (unit)


state 2

   52 ccode: C_CODE .

    $default  reduce using rule 52 (ccode)


state 3

   53 ccode: C_DECL .

    $default  reduce using rule 53 (ccode)


state 4

   48 cstate: C_STATE . STRING STRING
   50       | C_STATE . STRING STRING STRING

    STRING  shift, and go to state 35


state 5

   49 cstate: C_TRACK . STRING STRING
   51       | C_TRACK . STRING STRING STRING

    STRING  shift, and go to state 36


state 6

   41 utype: TYPEDEF . NAME '{' @7 decl_lst '}'

    NAME  shift, and go to state 37


state 7

   45 ns: INLINE . nm l_par @8 args r_par

    NAME   shift, and go to state 38
    INAME  shift, and go to state 39

    nm  go to state 40


state 8

  164 semi: SEMI .

    $default  reduce using rule 164 (semi)


state 9

  165 semi: ARROW .

    $default  reduce using rule 165 (semi)


state 10

   23 inst: ACTIVE .
   24     | ACTIVE . '[' const_expr ']'
   25     | ACTIVE . '[' NAME ']'

    '['  shift, and go to state 41

    $default  reduce using rule 23 (inst)


state 11

   68 vis: HIDDEN .

    $default  reduce using rule 68 (vis)


state 12

   69 vis: SHOW .

    $default  reduce using rule 69 (vis)


state 13

   70 vis: ISLOCAL .

    $default  reduce using rule 70 (vis)


state 14

   33 claim: CLAIM . optname @5 body

    NAME  shift, and go to state 42

    $default  reduce using rule 34 (optname)

    optname  go to state 43


state 15

   39 events: TRACE . @6 body

    $default  reduce using rule 38 (@6)

    @6  go to state 44


state 16

   27 init: INIT . @3 Opt_priority body

    $default  reduce using rule 26 (@3)

    @3  go to state 45


state 17

   29 ltl: LTL . optname2 @4 ltl_body

    NAME  shift, and go to state 46

    $default  reduce using rule 36 (optname2)

    optname2  go to state 47


state 18

    0 $accept: program . $end

    $end  shift, and go to state 48


state 19

    1 program: units .
    3 units: units . unit

    error    shift, and go to state 1
    C_CODE   shift, and go to state 2
    C_DECL   shift, and go to state 3
    C_STATE  shift, and go to state 4
    C_TRACK  shift, and go to state 5
    TYPEDEF  shift, and go to state 6
    INLINE   shift, and go to state 7
    SEMI     shift, and go to state 8
    ARROW    shift, and go to state 9
    ACTIVE   shift, and go to state 10
    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13
    CLAIM    shift, and go to state 14
    TRACE    shift, and go to state 15
    INIT     shift, and go to state 16
    LTL      shift, and go to state 17

    $end        reduce using rule 1 (program)
    PROCTYPE    reduce using rule 22 (inst)
    D_PROCTYPE  reduce using rule 22 (inst)
    TYPE        reduce using rule 67 (vis)
    UNAME       reduce using rule 67 (vis)

    unit      go to state 49
    proc      go to state 21
    inst      go to state 22
    init      go to state 23
    ltl       go to state 24
    claim     go to state 25
    events    go to state 26
    utype     go to state 27
    ns        go to state 28
    c_fcts    go to state 29
    cstate    go to state 30
    ccode     go to state 31
    vis       go to state 32
    one_decl  go to state 33
    semi      go to state 34


state 20

    2 units: unit .

    $default  reduce using rule 2 (units)


state 21

    4 unit: proc .

    $default  reduce using rule 4 (unit)


state 22

   19 proc: inst . proctype NAME @1 l_par decl r_par @2 Opt_priority Opt_enabler body

    PROCTYPE    shift, and go to state 50
    D_PROCTYPE  shift, and go to state 51

    proctype  go to state 52


state 23

    5 unit: init .

    $default  reduce using rule 5 (unit)


state 24

    7 unit: ltl .

    $default  reduce using rule 7 (unit)


state 25

    6 unit: claim .

    $default  reduce using rule 6 (unit)


state 26

    8 unit: events .

    $default  reduce using rule 8 (unit)


state 27

   10 unit: utype .

    $default  reduce using rule 10 (unit)


state 28

   12 unit: ns .

    $default  reduce using rule 12 (unit)


state 29

   11 unit: c_fcts .

    $default  reduce using rule 11 (unit)


state 30

   47 c_fcts: cstate .

    $default  reduce using rule 47 (c_fcts)


state 31

   46 c_fcts: ccode .

    $default  reduce using rule 46 (c_fcts)


state 32

   73 one_decl: vis . TYPE var_list
   74         | vis . UNAME var_list
   75         | vis . TYPE asgn '{' nlst '}'

    TYPE   shift, and go to state 53
    UNAME  shift, and go to state 54


state 33

    9 unit: one_decl .

    $default  reduce using rule 9 (unit)


state 34

   13 unit: semi .

    $default  reduce using rule 13 (unit)


state 35

   48 cstate: C_STATE STRING . STRING
   50       | C_STATE STRING . STRING STRING

    STRING  shift, and go to state 55


state 36

   49 cstate: C_TRACK STRING . STRING
   51       | C_TRACK STRING . STRING STRING

    STRING  shift, and go to state 56


state 37

   41 utype: TYPEDEF NAME . '{' @7 decl_lst '}'

    '{'  shift, and go to state 57


state 38

   42 nm: NAME .

    $default  reduce using rule 42 (nm)


state 39

   43 nm: INAME .

    $default  reduce using rule 43 (nm)


state 40

   45 ns: INLINE nm . l_par @8 args r_par

    '('  shift, and go to state 58

    l_par  go to state 59


state 41

   24 inst: ACTIVE '[' . const_expr ']'
   25     | ACTIVE '[' . NAME ']'

    CONST  shift, and go to state 60
    NAME   shift, and go to state 61
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 64


state 42

   35 optname: NAME .

    $default  reduce using rule 35 (optname)


state 43

   33 claim: CLAIM optname . @5 body

    $default  reduce using rule 32 (@5)

    @5  go to state 65


state 44

   39 events: TRACE @6 . body

    '{'  shift, and go to state 66

    body  go to state 67


state 45

   27 init: INIT @3 . Opt_priority body

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 221 (Opt_priority)

    Opt_priority  go to state 69


state 46

   37 optname2: NAME .

    $default  reduce using rule 37 (optname2)


state 47

   29 ltl: LTL optname2 . @4 ltl_body

    $default  reduce using rule 28 (@4)

    @4  go to state 70


state 48

    0 $accept: program $end .

    $default  accept


state 49

    3 units: units unit .

    $default  reduce using rule 3 (units)


state 50

   20 proctype: PROCTYPE .

    $default  reduce using rule 20 (proctype)


state 51

   21 proctype: D_PROCTYPE .

    $default  reduce using rule 21 (proctype)


state 52

   19 proc: inst proctype . NAME @1 l_par decl r_par @2 Opt_priority Opt_enabler body

    NAME  shift, and go to state 71


state 53

   73 one_decl: vis TYPE . var_list
   75         | vis TYPE . asgn '{' nlst '}'

    NAME  shift, and go to state 72
    ASGN  shift, and go to state 73

    $default  reduce using rule 71 (asgn)

    asgn      go to state 74
    var_list  go to state 75
    ivar      go to state 76
    vardcl    go to state 77


state 54

   74 one_decl: vis UNAME . var_list

    NAME  shift, and go to state 72

    var_list  go to state 78
    ivar      go to state 76
    vardcl    go to state 77


state 55

   48 cstate: C_STATE STRING STRING .
   50       | C_STATE STRING STRING . STRING

    STRING  shift, and go to state 79

    $default  reduce using rule 48 (cstate)


state 56

   49 cstate: C_TRACK STRING STRING .
   51       | C_TRACK STRING STRING . STRING

    STRING  shift, and go to state 80

    $default  reduce using rule 49 (cstate)


state 57

   41 utype: TYPEDEF NAME '{' . @7 decl_lst '}'

    $default  reduce using rule 40 (@7)

    @7  go to state 81


state 58

   15 l_par: '(' .

    $default  reduce using rule 15 (l_par)


state 59

   45 ns: INLINE nm l_par . @8 args r_par

    $default  reduce using rule 44 (@8)

    @8  go to state 82


state 60

  170 const_expr: CONST .

    $default  reduce using rule 170 (const_expr)


state 61

   25 inst: ACTIVE '[' NAME . ']'

    ']'  shift, and go to state 83


state 62

  171 const_expr: '-' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 84


state 63

  172 const_expr: l_par . const_expr r_par

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 85


state 64

   24 inst: ACTIVE '[' const_expr . ']'
  173 const_expr: const_expr . '+' const_expr
  174           | const_expr . '-' const_expr
  175           | const_expr . '*' const_expr
  176           | const_expr . '/' const_expr
  177           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ']'  shift, and go to state 91


state 65

   33 claim: CLAIM optname @5 . body

    '{'  shift, and go to state 66

    body  go to state 92


state 66

   57 body: '{' . @9 sequence OS @10 '}'

    $default  reduce using rule 55 (@9)

    @9  go to state 93


state 67

   39 events: TRACE @6 body .

    $default  reduce using rule 39 (events)


state 68

  222 Opt_priority: PRIORITY . CONST

    CONST  shift, and go to state 94


state 69

   27 init: INIT @3 Opt_priority . body

    '{'  shift, and go to state 66

    body  go to state 95


state 70

   29 ltl: LTL optname2 @4 . ltl_body

    error  shift, and go to state 96
    '{'    shift, and go to state 97

    ltl_body  go to state 98


state 71

   19 proc: inst proctype NAME . @1 l_par decl r_par @2 Opt_priority Opt_enabler body

    $default  reduce using rule 17 (@1)

    @1  go to state 99


state 72

   91 vardcl: NAME .
   92       | NAME . ':' CONST
   93       | NAME . '[' const_expr ']'
   94       | NAME . '[' NAME ']'

    '['  shift, and go to state 100
    ':'  shift, and go to state 101

    $default  reduce using rule 91 (vardcl)


state 73

   72 asgn: ASGN .

    $default  reduce using rule 72 (asgn)


state 74

   75 one_decl: vis TYPE asgn . '{' nlst '}'

    '{'  shift, and go to state 102


state 75

   73 one_decl: vis TYPE var_list .

    $default  reduce using rule 73 (one_decl)


state 76

   82 var_list: ivar .
   83         | ivar . ',' var_list

    ','  shift, and go to state 103

    $default  reduce using rule 82 (var_list)


state 77

   86 ivar: vardcl .
   87     | vardcl . ASGN '{' c_list '}'
   88     | vardcl . ASGN expr
   89     | vardcl . ASGN ch_init

    ASGN  shift, and go to state 104

    $default  reduce using rule 86 (ivar)


state 78

   74 one_decl: vis UNAME var_list .

    $default  reduce using rule 74 (one_decl)


state 79

   50 cstate: C_STATE STRING STRING STRING .

    $default  reduce using rule 50 (cstate)


state 80

   51 cstate: C_TRACK STRING STRING STRING .

    $default  reduce using rule 51 (cstate)


state 81

   41 utype: TYPEDEF NAME '{' @7 . decl_lst '}'

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    $default  reduce using rule 67 (vis)

    vis       go to state 32
    one_decl  go to state 105
    decl_lst  go to state 106


state 82

   45 ns: INLINE nm l_par @8 . args r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 254 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 131
    arg       go to state 132


state 83

   25 inst: ACTIVE '[' NAME ']' .

    $default  reduce using rule 25 (inst)


state 84

  171 const_expr: '-' const_expr .
  173           | const_expr . '+' const_expr
  174           | const_expr . '-' const_expr
  175           | const_expr . '*' const_expr
  176           | const_expr . '/' const_expr
  177           | const_expr . '%' const_expr

    $default  reduce using rule 171 (const_expr)


state 85

  172 const_expr: l_par const_expr . r_par
  173           | const_expr . '+' const_expr
  174           | const_expr . '-' const_expr
  175           | const_expr . '*' const_expr
  176           | const_expr . '/' const_expr
  177           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ')'  shift, and go to state 133

    r_par  go to state 134


state 86

  173 const_expr: const_expr '+' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 135


state 87

  174 const_expr: const_expr '-' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 136


state 88

  175 const_expr: const_expr '*' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 137


state 89

  176 const_expr: const_expr '/' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 138


state 90

  177 const_expr: const_expr '%' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 139


state 91

   24 inst: ACTIVE '[' const_expr ']' .

    $default  reduce using rule 24 (inst)


state 92

   33 claim: CLAIM optname @5 body .

    $default  reduce using rule 33 (claim)


state 93

   57 body: '{' @9 . sequence OS @10 '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 165
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 94

  222 Opt_priority: PRIORITY CONST .

    $default  reduce using rule 222 (Opt_priority)


state 95

   27 init: INIT @3 Opt_priority body .

    $default  reduce using rule 27 (init)


state 96

   31 ltl_body: error .

    $default  reduce using rule 31 (ltl_body)


state 97

   30 ltl_body: '{' . full_expr OS '}'

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 177
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 98

   29 ltl: LTL optname2 @4 ltl_body .

    $default  reduce using rule 29 (ltl)


state 99

   19 proc: inst proctype NAME @1 . l_par decl r_par @2 Opt_priority Opt_enabler body

    '('  shift, and go to state 58

    l_par  go to state 178


state 100

   93 vardcl: NAME '[' . const_expr ']'
   94       | NAME '[' . NAME ']'

    CONST  shift, and go to state 60
    NAME   shift, and go to state 179
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 180


state 101

   92 vardcl: NAME ':' . CONST

    CONST  shift, and go to state 181


state 102

   75 one_decl: vis TYPE asgn '{' . nlst '}'

    NAME  shift, and go to state 182

    nlst  go to state 183


state 103

   83 var_list: ivar ',' . var_list

    NAME  shift, and go to state 72

    var_list  go to state 184
    ivar      go to state 76
    vardcl    go to state 77


state 104

   87 ivar: vardcl ASGN . '{' c_list '}'
   88     | vardcl ASGN . expr
   89     | vardcl ASGN . ch_init

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '['          shift, and go to state 185
    '{'          shift, and go to state 186

    l_par     go to state 124
    cexpr     go to state 125
    ch_init   go to state 187
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 188
    ltl_expr  go to state 130


state 105

   76 decl_lst: one_decl .
   77         | one_decl . SEMI decl_lst

    SEMI  shift, and go to state 189

    $default  reduce using rule 76 (decl_lst)


state 106

   41 utype: TYPEDEF NAME '{' @7 decl_lst . '}'

    '}'  shift, and go to state 190


state 107

   54 cexpr: C_EXPR .

    $default  reduce using rule 54 (cexpr)


state 108

  202 expr: RUN . aname @33 l_par args r_par Opt_priority

    NAME   shift, and go to state 191
    PNAME  shift, and go to state 192

    aname  go to state 193


state 109

  203 expr: LEN . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 194


state 110

  204 expr: ENABLED . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 195


state 111

  205 expr: GET_P . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 196


state 112

  215 expr: PC_VAL . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 197


state 113

  213 expr: TIMEOUT .

    $default  reduce using rule 213 (expr)


state 114

  214 expr: NONPROGRESS .

    $default  reduce using rule 214 (expr)


state 115

  212 expr: CONST .

    $default  reduce using rule 212 (expr)


state 116

   96 pfld: NAME .
   98     | NAME . @12 '[' expr ']'

    '['       reduce using rule 97 (@12)
    $default  reduce using rule 96 (pfld)

    @12  go to state 198


state 117

  216 expr: PNAME . '[' expr ']' '@' NAME
  217     | PNAME . '[' expr ']' ':' pfld
  218     | PNAME . '@' NAME
  219     | PNAME . ':' pfld

    '['  shift, and go to state 199
    ':'  shift, and go to state 200
    '@'  shift, and go to state 201


state 118

  199 expr: SND . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 202
    ltl_expr  go to state 130


state 119

  232 ltl_expr: EVENTUALLY . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 203
    ltl_expr  go to state 130


state 120

  231 ltl_expr: ALWAYS . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 204
    ltl_expr  go to state 130


state 121

  230 ltl_expr: NEXT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 205
    ltl_expr  go to state 130


state 122

  198 expr: '-' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 206
    ltl_expr  go to state 130


state 123

  197 expr: '~' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 207
    ltl_expr  go to state 130


state 124

  178 expr: l_par . expr r_par
  200     | l_par . expr ARROW expr ':' expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 208
    ltl_expr  go to state 130


state 125

  211 expr: cexpr .

    $default  reduce using rule 211 (expr)


state 126

  207 expr: varref . RCV @34 '[' rargs ']'
  209     | varref . R_RCV @35 '[' rargs ']'
  210     | varref .

    R_RCV  shift, and go to state 209
    RCV    shift, and go to state 210

    $default  reduce using rule 210 (expr)


state 127

  100 cmpnd: pfld . @13 sfld

    $default  reduce using rule 99 (@13)

    @13  go to state 211


state 128

   95 varref: cmpnd .

    $default  reduce using rule 95 (varref)


state 129

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  260 arg: expr .
  261    | expr . ',' arg

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ','         shift, and go to state 235

    $default  reduce using rule 260 (arg)


state 130

  220 expr: ltl_expr .

    $default  reduce using rule 220 (expr)


state 131

   45 ns: INLINE nm l_par @8 args . r_par

    ')'  shift, and go to state 133

    r_par  go to state 236


state 132

  255 args: arg .

    $default  reduce using rule 255 (args)


state 133

   16 r_par: ')' .

    $default  reduce using rule 16 (r_par)


state 134

  172 const_expr: l_par const_expr r_par .

    $default  reduce using rule 172 (const_expr)


state 135

  173 const_expr: const_expr . '+' const_expr
  173           | const_expr '+' const_expr .
  174           | const_expr . '-' const_expr
  175           | const_expr . '*' const_expr
  176           | const_expr . '/' const_expr
  177           | const_expr . '%' const_expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 173 (const_expr)


state 136

  173 const_expr: const_expr . '+' const_expr
  174           | const_expr . '-' const_expr
  174           | const_expr '-' const_expr .
  175           | const_expr . '*' const_expr
  176           | const_expr . '/' const_expr
  177           | const_expr . '%' const_expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 174 (const_expr)


state 137

  173 const_expr: const_expr . '+' const_expr
  174           | const_expr . '-' const_expr
  175           | const_expr . '*' const_expr
  175           | const_expr '*' const_expr .
  176           | const_expr . '/' const_expr
  177           | const_expr . '%' const_expr

    $default  reduce using rule 175 (const_expr)


state 138

  173 const_expr: const_expr . '+' const_expr
  174           | const_expr . '-' const_expr
  175           | const_expr . '*' const_expr
  176           | const_expr . '/' const_expr
  176           | const_expr '/' const_expr .
  177           | const_expr . '%' const_expr

    $default  reduce using rule 176 (const_expr)


state 139

  173 const_expr: const_expr . '+' const_expr
  174           | const_expr . '-' const_expr
  175           | const_expr . '*' const_expr
  176           | const_expr . '/' const_expr
  177           | const_expr . '%' const_expr
  177           | const_expr '%' const_expr .

    $default  reduce using rule 177 (const_expr)


state 140

  124 Special: error .

    $default  reduce using rule 124 (Special)


state 141

  133 Stmnt: ASSERT . full_expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 237
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 142

  130 Stmnt: PRINT . l_par STRING @20 prargs r_par

    '('  shift, and go to state 58

    l_par  go to state 238


state 143

  131 Stmnt: PRINTM . l_par varref r_par
  132      | PRINTM . l_par CONST r_par

    '('  shift, and go to state 58

    l_par  go to state 239


state 144

  128 Stmnt: SET_P . l_par two_args r_par

    '('  shift, and go to state 58

    l_par  go to state 240


state 145

  157 Stmnt: RETURN . full_expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 241
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 146

  121 Special: GOTO . NAME

    NAME  shift, and go to state 242


state 147

  120 Special: BREAK .

    $default  reduce using rule 120 (Special)


state 148

  144 Stmnt: ELSE .

    $default  reduce using rule 144 (Stmnt)


state 149

  117 Special: IF . options FI

    SEP  shift, and go to state 243

    options  go to state 244
    option   go to state 245


state 150

  119 Special: DO . @19 options OD

    $default  reduce using rule 118 (@19)

    @19  go to state 246


state 151

  106 for_pre: FOR . l_par @14 varref

    '('  shift, and go to state 58

    l_par  go to state 247


state 152

  116 Special: SELECT . l_par varref ':' expr DOTDOT expr r_par

    '('  shift, and go to state 58

    l_par  go to state 248


state 153

  146 Stmnt: ATOMIC . '{' @25 sequence OS '}'

    '{'  shift, and go to state 249


state 154

  148 Stmnt: D_STEP . '{' @26 sequence OS '}'

    '{'  shift, and go to state 250


state 155

  241 Probe: FULL . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 251


state 156

  243 Probe: EMPTY . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 252


state 157

  242 Probe: NFULL . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 253


state 158

  244 Probe: NEMPTY . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 254


state 159

   61 step: XU . vref_lst

    NAME  shift, and go to state 116

    vref_lst  go to state 255
    varref    go to state 256
    pfld      go to state 127
    cmpnd     go to state 128


state 160

   62 step: NAME . ':' one_decl
   63     | NAME . ':' XU
   96 pfld: NAME .
   98     | NAME . @12 '[' expr ']'
  122 Special: NAME . ':' stmnt
  123        | NAME . ':'

    ':'  shift, and go to state 257

    '['       reduce using rule 97 (@12)
    $default  reduce using rule 96 (pfld)

    @12  go to state 198


state 161

  153 Stmnt: INAME . @28 l_par args r_par @29 Stmnt

    $default  reduce using rule 151 (@28)

    @28  go to state 258


state 162

  150 Stmnt: '{' . @27 sequence OS '}'

    $default  reduce using rule 149 (@27)

    @27  go to state 259


state 163

  178 expr: l_par . expr r_par
  200     | l_par . expr ARROW expr ':' expr r_par
  234 Expr: l_par . Expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 260
    ltl_expr  go to state 130
    Expr      go to state 261
    Probe     go to state 176


state 164

  134 Stmnt: ccode .

    $default  reduce using rule 134 (Stmnt)


state 165

   57 body: '{' @9 sequence . OS @10 '}'
   59 sequence: sequence . MS step

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 162 (OS)

    OS    go to state 262
    semi  go to state 263
    MS    go to state 264


state 166

   58 sequence: step .

    $default  reduce using rule 58 (sequence)


state 167

   60 step: one_decl .

    $default  reduce using rule 60 (step)


state 168

  109 Special: varref . RCV @15 rargs
  111        | varref . SND @16 margs
  125 Stmnt: varref . ASGN full_expr
  126      | varref . INCR
  127      | varref . DECR
  136      | varref . R_RCV @21 rargs
  138      | varref . RCV @22 LT rargs GT
  140      | varref . R_RCV @23 LT rargs GT
  142      | varref . O_SND @24 margs
  156      | varref . ASGN INAME @30 l_par args r_par @31 Stmnt
  207 expr: varref . RCV @34 '[' rargs ']'
  209     | varref . R_RCV @35 '[' rargs ']'
  210     | varref .

    ASGN   shift, and go to state 265
    R_RCV  shift, and go to state 266
    RCV    shift, and go to state 267
    O_SND  shift, and go to state 268
    SND    shift, and go to state 269
    DECR   shift, and go to state 270
    INCR   shift, and go to state 271

    $default  reduce using rule 210 (expr)


state 169

   64 step: stmnt .
   66     | stmnt . UNLESS @11 stmnt

    UNLESS  shift, and go to state 272

    $default  reduce using rule 64 (step)


state 170

  113 Special: for_pre . ':' expr DOTDOT expr r_par @17 for_post
  115        | for_pre . IN varref r_par @18 for_post

    IN   shift, and go to state 273
    ':'  shift, and go to state 274


state 171

  103 stmnt: Special .

    $default  reduce using rule 103 (stmnt)


state 172

  104 stmnt: Stmnt .

    $default  reduce using rule 104 (stmnt)


state 173

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  223 full_expr: expr .
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  237 Expr: expr . AND Expr
  240     | expr . OR Expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 275
    AND         shift, and go to state 276
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 223 (full_expr)


state 174

  143 Stmnt: full_expr .

    $default  reduce using rule 143 (Stmnt)


state 175

  224 full_expr: Expr .
  235 Expr: Expr . AND Expr
  236     | Expr . AND expr
  238     | Expr . OR Expr
  239     | Expr . OR expr

    OR   shift, and go to state 277
    AND  shift, and go to state 278

    $default  reduce using rule 224 (full_expr)


state 176

  233 Expr: Probe .

    $default  reduce using rule 233 (Expr)


state 177

   30 ltl_body: '{' full_expr . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 162 (OS)

    OS    go to state 279
    semi  go to state 280


state 178

   19 proc: inst proctype NAME @1 l_par . decl r_par @2 Opt_priority Opt_enabler body

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    ')'       reduce using rule 78 (decl)
    $default  reduce using rule 67 (vis)

    vis       go to state 32
    one_decl  go to state 105
    decl_lst  go to state 281
    decl      go to state 282


state 179

   94 vardcl: NAME '[' NAME . ']'

    ']'  shift, and go to state 283


state 180

   93 vardcl: NAME '[' const_expr . ']'
  173 const_expr: const_expr . '+' const_expr
  174           | const_expr . '-' const_expr
  175           | const_expr . '*' const_expr
  176           | const_expr . '/' const_expr
  177           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ']'  shift, and go to state 284


state 181

   92 vardcl: NAME ':' CONST .

    $default  reduce using rule 92 (vardcl)


state 182

  270 nlst: NAME .

    $default  reduce using rule 270 (nlst)


state 183

   75 one_decl: vis TYPE asgn '{' nlst . '}'
  271 nlst: nlst . NAME
  272     | nlst . ','

    NAME  shift, and go to state 285
    '}'   shift, and go to state 286
    ','   shift, and go to state 287


state 184

   83 var_list: ivar ',' var_list .

    $default  reduce using rule 83 (var_list)


state 185

   90 ch_init: '[' . const_expr ']' OF '{' typ_list '}'

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 288


state 186

   87 ivar: vardcl ASGN '{' . c_list '}'

    CONST  shift, and go to state 289

    c_list  go to state 290


state 187

   89 ivar: vardcl ASGN ch_init .

    $default  reduce using rule 89 (ivar)


state 188

   88 ivar: vardcl ASGN expr .
  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 88 (ivar)


state 189

   77 decl_lst: one_decl SEMI . decl_lst

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    $default  reduce using rule 67 (vis)

    vis       go to state 32
    one_decl  go to state 105
    decl_lst  go to state 291


state 190

   41 utype: TYPEDEF NAME '{' @7 decl_lst '}' .

    $default  reduce using rule 41 (utype)


state 191

  168 aname: NAME .

    $default  reduce using rule 168 (aname)


state 192

  169 aname: PNAME .

    $default  reduce using rule 169 (aname)


state 193

  202 expr: RUN aname . @33 l_par args r_par Opt_priority

    $default  reduce using rule 201 (@33)

    @33  go to state 292


state 194

  203 expr: LEN l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 293
    pfld    go to state 127
    cmpnd   go to state 128


state 195

  204 expr: ENABLED l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 294
    ltl_expr  go to state 130


state 196

  205 expr: GET_P l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 295
    ltl_expr  go to state 130


state 197

  215 expr: PC_VAL l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 296
    ltl_expr  go to state 130


state 198

   98 pfld: NAME @12 . '[' expr ']'

    '['  shift, and go to state 297


state 199

  216 expr: PNAME '[' . expr ']' '@' NAME
  217     | PNAME '[' . expr ']' ':' pfld

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 298
    ltl_expr  go to state 130


state 200

  219 expr: PNAME ':' . pfld

    NAME  shift, and go to state 116

    pfld  go to state 299


state 201

  218 expr: PNAME '@' . NAME

    NAME  shift, and go to state 300


state 202

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  199     | SND expr .
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    $default  reduce using rule 199 (expr)


state 203

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  232         | EVENTUALLY expr .

    $default  reduce using rule 232 (ltl_expr)


state 204

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  231         | ALWAYS expr .

    $default  reduce using rule 231 (ltl_expr)


state 205

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  230         | NEXT expr .

    $default  reduce using rule 230 (ltl_expr)


state 206

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  198     | '-' expr .
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    $default  reduce using rule 198 (expr)


state 207

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  197     | '~' expr .
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    $default  reduce using rule 197 (expr)


state 208

  178 expr: l_par expr . r_par
  179     | expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  200     | l_par expr . ARROW expr ':' expr r_par
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    ARROW       shift, and go to state 301
    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 302


state 209

  209 expr: varref R_RCV . @35 '[' rargs ']'

    $default  reduce using rule 208 (@35)

    @35  go to state 303


state 210

  207 expr: varref RCV . @34 '[' rargs ']'

    $default  reduce using rule 206 (@34)

    @34  go to state 304


state 211

  100 cmpnd: pfld @13 . sfld

    '.'  shift, and go to state 305

    $default  reduce using rule 101 (sfld)

    sfld  go to state 306


state 212

  229 ltl_expr: expr EQUIV . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 307
    ltl_expr  go to state 130


state 213

  228 ltl_expr: expr IMPLIES . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 308
    ltl_expr  go to state 130


state 214

  194 expr: expr OR . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 309
    ltl_expr  go to state 130


state 215

  193 expr: expr AND . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 310
    ltl_expr  go to state 130


state 216

  226 ltl_expr: expr RELEASE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 311
    ltl_expr  go to state 130


state 217

  227 ltl_expr: expr WEAK_UNTIL . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 312
    ltl_expr  go to state 130


state 218

  225 ltl_expr: expr UNTIL . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 313
    ltl_expr  go to state 130


state 219

  186 expr: expr '|' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 314
    ltl_expr  go to state 130


state 220

  185 expr: expr '^' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 315
    ltl_expr  go to state 130


state 221

  184 expr: expr '&' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 316
    ltl_expr  go to state 130


state 222

  192 expr: expr NE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 317
    ltl_expr  go to state 130


state 223

  191 expr: expr EQ . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 318
    ltl_expr  go to state 130


state 224

  190 expr: expr LE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 319
    ltl_expr  go to state 130


state 225

  189 expr: expr GE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 320
    ltl_expr  go to state 130


state 226

  188 expr: expr LT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 321
    ltl_expr  go to state 130


state 227

  187 expr: expr GT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 322
    ltl_expr  go to state 130


state 228

  196 expr: expr RSHIFT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 323
    ltl_expr  go to state 130


state 229

  195 expr: expr LSHIFT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 324
    ltl_expr  go to state 130


state 230

  179 expr: expr '+' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 325
    ltl_expr  go to state 130


state 231

  180 expr: expr '-' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 326
    ltl_expr  go to state 130


state 232

  181 expr: expr '*' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 327
    ltl_expr  go to state 130


state 233

  182 expr: expr '/' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 328
    ltl_expr  go to state 130


state 234

  183 expr: expr '%' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 329
    ltl_expr  go to state 130


state 235

  261 arg: expr ',' . arg

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    arg       go to state 330


state 236

   45 ns: INLINE nm l_par @8 args r_par .

    $default  reduce using rule 45 (ns)


state 237

  133 Stmnt: ASSERT full_expr .

    $default  reduce using rule 133 (Stmnt)


state 238

  130 Stmnt: PRINT l_par . STRING @20 prargs r_par

    STRING  shift, and go to state 331


state 239

  131 Stmnt: PRINTM l_par . varref r_par
  132      | PRINTM l_par . CONST r_par

    CONST  shift, and go to state 332
    NAME   shift, and go to state 116

    varref  go to state 333
    pfld    go to state 127
    cmpnd   go to state 128


state 240

  128 Stmnt: SET_P l_par . two_args r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 334
    ltl_expr  go to state 130
    two_args  go to state 335


state 241

  157 Stmnt: RETURN full_expr .

    $default  reduce using rule 157 (Stmnt)


state 242

  121 Special: GOTO NAME .

    $default  reduce using rule 121 (Special)


state 243

  161 option: SEP . @32 sequence OS

    $default  reduce using rule 160 (@32)

    @32  go to state 336


state 244

  117 Special: IF options . FI

    FI  shift, and go to state 337


state 245

  158 options: option .
  159        | option . options

    SEP  shift, and go to state 243

    $default  reduce using rule 158 (options)

    options  go to state 338
    option   go to state 245


state 246

  119 Special: DO @19 . options OD

    SEP  shift, and go to state 243

    options  go to state 339
    option   go to state 245


state 247

  106 for_pre: FOR l_par . @14 varref

    $default  reduce using rule 105 (@14)

    @14  go to state 340


state 248

  116 Special: SELECT l_par . varref ':' expr DOTDOT expr r_par

    NAME  shift, and go to state 116

    varref  go to state 341
    pfld    go to state 127
    cmpnd   go to state 128


state 249

  146 Stmnt: ATOMIC '{' . @25 sequence OS '}'

    $default  reduce using rule 145 (@25)

    @25  go to state 342


state 250

  148 Stmnt: D_STEP '{' . @26 sequence OS '}'

    $default  reduce using rule 147 (@26)

    @26  go to state 343


state 251

  241 Probe: FULL l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 344
    pfld    go to state 127
    cmpnd   go to state 128


state 252

  243 Probe: EMPTY l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 345
    pfld    go to state 127
    cmpnd   go to state 128


state 253

  242 Probe: NFULL l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 346
    pfld    go to state 127
    cmpnd   go to state 128


state 254

  244 Probe: NEMPTY l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 347
    pfld    go to state 127
    cmpnd   go to state 128


state 255

   61 step: XU vref_lst .

    $default  reduce using rule 61 (step)


state 256

   80 vref_lst: varref .
   81         | varref . ',' vref_lst

    ','  shift, and go to state 348

    $default  reduce using rule 80 (vref_lst)


state 257

   62 step: NAME ':' . one_decl
   63     | NAME ':' . XU
  122 Special: NAME ':' . stmnt
  123        | NAME ':' .

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 349
    NAME         shift, and go to state 350
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    SEMI    reduce using rule 123 (Special)
    ARROW   reduce using rule 123 (Special)
    FI      reduce using rule 123 (Special)
    OD      reduce using rule 123 (Special)
    SEP     reduce using rule 123 (Special)
    UNLESS  reduce using rule 123 (Special)
    TYPE    reduce using rule 67 (vis)
    UNAME   reduce using rule 67 (vis)
    '}'     reduce using rule 123 (Special)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    vis        go to state 32
    one_decl   go to state 351
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 352
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 258

  153 Stmnt: INAME @28 . l_par args r_par @29 Stmnt

    '('  shift, and go to state 58

    l_par  go to state 353


state 259

  150 Stmnt: '{' @27 . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 354
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 260

  178 expr: l_par expr . r_par
  179     | expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  200     | l_par expr . ARROW expr ':' expr r_par
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  237 Expr: expr . AND Expr
  240     | expr . OR Expr

    ARROW       shift, and go to state 301
    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 275
    AND         shift, and go to state 276
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 302


state 261

  234 Expr: l_par Expr . r_par
  235     | Expr . AND Expr
  236     | Expr . AND expr
  238     | Expr . OR Expr
  239     | Expr . OR expr

    OR   shift, and go to state 277
    AND  shift, and go to state 278
    ')'  shift, and go to state 133

    r_par  go to state 355


state 262

   57 body: '{' @9 sequence OS . @10 '}'

    $default  reduce using rule 56 (@10)

    @10  go to state 356


state 263

  163 OS: semi .
  166 MS: semi .

    FI        reduce using rule 163 (OS)
    OD        reduce using rule 163 (OS)
    SEP       reduce using rule 163 (OS)
    '}'       reduce using rule 163 (OS)
    $default  reduce using rule 166 (MS)


state 264

   59 sequence: sequence MS . step
  167 MS: MS . semi

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    SEMI         shift, and go to state 8
    ARROW        shift, and go to state 9
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    step       go to state 357
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    semi       go to state 358
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 265

  125 Stmnt: varref ASGN . full_expr
  156      | varref ASGN . INAME @30 l_par args r_par @31 Stmnt

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 359
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 360
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 266

  136 Stmnt: varref R_RCV . @21 rargs
  140      | varref R_RCV . @23 LT rargs GT
  209 expr: varref R_RCV . @35 '[' rargs ']'

    LT        reduce using rule 139 (@23)
    '['       reduce using rule 208 (@35)
    $default  reduce using rule 135 (@21)

    @21  go to state 361
    @23  go to state 362
    @35  go to state 303


state 267

  109 Special: varref RCV . @15 rargs
  138 Stmnt: varref RCV . @22 LT rargs GT
  207 expr: varref RCV . @34 '[' rargs ']'

    LT        reduce using rule 137 (@22)
    '['       reduce using rule 206 (@34)
    $default  reduce using rule 108 (@15)

    @15  go to state 363
    @22  go to state 364
    @34  go to state 304


state 268

  142 Stmnt: varref O_SND . @24 margs

    $default  reduce using rule 141 (@24)

    @24  go to state 365


state 269

  111 Special: varref SND . @16 margs

    $default  reduce using rule 110 (@16)

    @16  go to state 366


state 270

  127 Stmnt: varref DECR .

    $default  reduce using rule 127 (Stmnt)


state 271

  126 Stmnt: varref INCR .

    $default  reduce using rule 126 (Stmnt)


state 272

   66 step: stmnt UNLESS . @11 stmnt

    $default  reduce using rule 65 (@11)

    @11  go to state 367


state 273

  115 Special: for_pre IN . varref r_par @18 for_post

    NAME  shift, and go to state 116

    varref  go to state 368
    pfld    go to state 127
    cmpnd   go to state 128


state 274

  113 Special: for_pre ':' . expr DOTDOT expr r_par @17 for_post

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 369
    ltl_expr  go to state 130


state 275

  194 expr: expr OR . expr
  240 Expr: expr OR . Expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 370
    ltl_expr  go to state 130
    Expr      go to state 371
    Probe     go to state 176


state 276

  193 expr: expr AND . expr
  237 Expr: expr AND . Expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 372
    ltl_expr  go to state 130
    Expr      go to state 373
    Probe     go to state 176


state 277

  238 Expr: Expr OR . Expr
  239     | Expr OR . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 374
    ltl_expr  go to state 130
    Expr      go to state 375
    Probe     go to state 176


state 278

  235 Expr: Expr AND . Expr
  236     | Expr AND . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 376
    ltl_expr  go to state 130
    Expr      go to state 377
    Probe     go to state 176


state 279

   30 ltl_body: '{' full_expr OS . '}'

    '}'  shift, and go to state 378


state 280

  163 OS: semi .

    $default  reduce using rule 163 (OS)


state 281

   79 decl: decl_lst .

    $default  reduce using rule 79 (decl)


state 282

   19 proc: inst proctype NAME @1 l_par decl . r_par @2 Opt_priority Opt_enabler body

    ')'  shift, and go to state 133

    r_par  go to state 379


state 283

   94 vardcl: NAME '[' NAME ']' .

    $default  reduce using rule 94 (vardcl)


state 284

   93 vardcl: NAME '[' const_expr ']' .

    $default  reduce using rule 93 (vardcl)


state 285

  271 nlst: nlst NAME .

    $default  reduce using rule 271 (nlst)


state 286

   75 one_decl: vis TYPE asgn '{' nlst '}' .

    $default  reduce using rule 75 (one_decl)


state 287

  272 nlst: nlst ',' .

    $default  reduce using rule 272 (nlst)


state 288

   90 ch_init: '[' const_expr . ']' OF '{' typ_list '}'
  173 const_expr: const_expr . '+' const_expr
  174           | const_expr . '-' const_expr
  175           | const_expr . '*' const_expr
  176           | const_expr . '/' const_expr
  177           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ']'  shift, and go to state 380


state 289

   84 c_list: CONST .
   85       | CONST . ',' c_list

    ','  shift, and go to state 381

    $default  reduce using rule 84 (c_list)


state 290

   87 ivar: vardcl ASGN '{' c_list . '}'

    '}'  shift, and go to state 382


state 291

   77 decl_lst: one_decl SEMI decl_lst .

    $default  reduce using rule 77 (decl_lst)


state 292

  202 expr: RUN aname @33 . l_par args r_par Opt_priority

    '('  shift, and go to state 58

    l_par  go to state 383


state 293

  203 expr: LEN l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 384


state 294

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  204     | ENABLED l_par expr . r_par
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 385


state 295

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  205     | GET_P l_par expr . r_par
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 386


state 296

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  215     | PC_VAL l_par expr . r_par
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 387


state 297

   98 pfld: NAME @12 '[' . expr ']'

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 388
    ltl_expr  go to state 130


state 298

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  216     | PNAME '[' expr . ']' '@' NAME
  217     | PNAME '[' expr . ']' ':' pfld
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ']'         shift, and go to state 389


state 299

  219 expr: PNAME ':' pfld .

    $default  reduce using rule 219 (expr)


state 300

  218 expr: PNAME '@' NAME .

    $default  reduce using rule 218 (expr)


state 301

  200 expr: l_par expr ARROW . expr ':' expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 390
    ltl_expr  go to state 130


state 302

  178 expr: l_par expr r_par .

    $default  reduce using rule 178 (expr)


state 303

  209 expr: varref R_RCV @35 . '[' rargs ']'

    '['  shift, and go to state 391


state 304

  207 expr: varref RCV @34 . '[' rargs ']'

    '['  shift, and go to state 392


state 305

  102 sfld: '.' . cmpnd

    NAME  shift, and go to state 116

    pfld   go to state 127
    cmpnd  go to state 393


state 306

  100 cmpnd: pfld @13 sfld .

    $default  reduce using rule 100 (cmpnd)


state 307

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  229         | expr EQUIV expr .

    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 229 (ltl_expr)


state 308

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  228         | expr IMPLIES expr .
  229         | expr . EQUIV expr

    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 228 (ltl_expr)


state 309

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  194     | expr OR expr .
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 194 (expr)


state 310

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  193     | expr AND expr .
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 193 (expr)


state 311

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  226         | expr RELEASE expr .
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    '|'     shift, and go to state 219
    '^'     shift, and go to state 220
    '&'     shift, and go to state 221
    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 226 (ltl_expr)


state 312

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  227         | expr WEAK_UNTIL expr .
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    '|'     shift, and go to state 219
    '^'     shift, and go to state 220
    '&'     shift, and go to state 221
    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 227 (ltl_expr)


state 313

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  225         | expr UNTIL expr .
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    '|'     shift, and go to state 219
    '^'     shift, and go to state 220
    '&'     shift, and go to state 221
    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 225 (ltl_expr)


state 314

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  186     | expr '|' expr .
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    '^'     shift, and go to state 220
    '&'     shift, and go to state 221
    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 186 (expr)


state 315

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  185     | expr '^' expr .
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    '&'     shift, and go to state 221
    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 185 (expr)


state 316

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  184     | expr '&' expr .
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 184 (expr)


state 317

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  192     | expr NE expr .
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 192 (expr)


state 318

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  191     | expr EQ expr .
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 191 (expr)


state 319

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  190     | expr LE expr .
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 190 (expr)


state 320

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  189     | expr GE expr .
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 189 (expr)


state 321

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  188     | expr LT expr .
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 188 (expr)


state 322

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  187     | expr GT expr .
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 187 (expr)


state 323

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  196     | expr RSHIFT expr .
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    '+'  shift, and go to state 230
    '-'  shift, and go to state 231
    '*'  shift, and go to state 232
    '/'  shift, and go to state 233
    '%'  shift, and go to state 234

    $default  reduce using rule 196 (expr)


state 324

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  195     | expr LSHIFT expr .
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    '+'  shift, and go to state 230
    '-'  shift, and go to state 231
    '*'  shift, and go to state 232
    '/'  shift, and go to state 233
    '%'  shift, and go to state 234

    $default  reduce using rule 195 (expr)


state 325

  179 expr: expr . '+' expr
  179     | expr '+' expr .
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    '*'  shift, and go to state 232
    '/'  shift, and go to state 233
    '%'  shift, and go to state 234

    $default  reduce using rule 179 (expr)


state 326

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  180     | expr '-' expr .
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    '*'  shift, and go to state 232
    '/'  shift, and go to state 233
    '%'  shift, and go to state 234

    $default  reduce using rule 180 (expr)


state 327

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  181     | expr '*' expr .
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    $default  reduce using rule 181 (expr)


state 328

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  182     | expr '/' expr .
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    $default  reduce using rule 182 (expr)


state 329

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  183     | expr '%' expr .
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    $default  reduce using rule 183 (expr)


state 330

  261 arg: expr ',' arg .

    $default  reduce using rule 261 (arg)


state 331

  130 Stmnt: PRINT l_par STRING . @20 prargs r_par

    $default  reduce using rule 129 (@20)

    @20  go to state 394


state 332

  132 Stmnt: PRINTM l_par CONST . r_par

    ')'  shift, and go to state 133

    r_par  go to state 395


state 333

  131 Stmnt: PRINTM l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 396


state 334

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  253 two_args: expr . ',' expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ','         shift, and go to state 397


state 335

  128 Stmnt: SET_P l_par two_args . r_par

    ')'  shift, and go to state 133

    r_par  go to state 398


state 336

  161 option: SEP @32 . sequence OS

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 399
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 337

  117 Special: IF options FI .

    $default  reduce using rule 117 (Special)


state 338

  159 options: option options .

    $default  reduce using rule 159 (options)


state 339

  119 Special: DO @19 options . OD

    OD  shift, and go to state 400


state 340

  106 for_pre: FOR l_par @14 . varref

    NAME  shift, and go to state 116

    varref  go to state 401
    pfld    go to state 127
    cmpnd   go to state 128


state 341

  116 Special: SELECT l_par varref . ':' expr DOTDOT expr r_par

    ':'  shift, and go to state 402


state 342

  146 Stmnt: ATOMIC '{' @25 . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 403
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 343

  148 Stmnt: D_STEP '{' @26 . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 404
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 344

  241 Probe: FULL l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 405


state 345

  243 Probe: EMPTY l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 406


state 346

  242 Probe: NFULL l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 407


state 347

  244 Probe: NEMPTY l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 408


state 348

   81 vref_lst: varref ',' . vref_lst

    NAME  shift, and go to state 116

    vref_lst  go to state 409
    varref    go to state 256
    pfld      go to state 127
    cmpnd     go to state 128


state 349

   63 step: NAME ':' XU .

    $default  reduce using rule 63 (step)


state 350

   96 pfld: NAME .
   98     | NAME . @12 '[' expr ']'
  122 Special: NAME . ':' stmnt
  123        | NAME . ':'

    ':'  shift, and go to state 410

    '['       reduce using rule 97 (@12)
    $default  reduce using rule 96 (pfld)

    @12  go to state 198


state 351

   62 step: NAME ':' one_decl .

    $default  reduce using rule 62 (step)


state 352

  122 Special: NAME ':' stmnt .

    $default  reduce using rule 122 (Special)


state 353

  153 Stmnt: INAME @28 l_par . args r_par @29 Stmnt

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 254 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 411
    arg       go to state 132


state 354

   59 sequence: sequence . MS step
  150 Stmnt: '{' @27 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 162 (OS)

    OS    go to state 412
    semi  go to state 263
    MS    go to state 264


state 355

  234 Expr: l_par Expr r_par .

    $default  reduce using rule 234 (Expr)


state 356

   57 body: '{' @9 sequence OS @10 . '}'

    '}'  shift, and go to state 413


state 357

   59 sequence: sequence MS step .

    $default  reduce using rule 59 (sequence)


state 358

  167 MS: MS semi .

    $default  reduce using rule 167 (MS)


state 359

  156 Stmnt: varref ASGN INAME . @30 l_par args r_par @31 Stmnt

    $default  reduce using rule 154 (@30)

    @30  go to state 414


state 360

  125 Stmnt: varref ASGN full_expr .

    $default  reduce using rule 125 (Stmnt)


state 361

  136 Stmnt: varref R_RCV @21 . rargs

    EVAL   shift, and go to state 415
    CONST  shift, and go to state 416
    NAME   shift, and go to state 116
    '-'    shift, and go to state 417
    '('    shift, and go to state 58

    l_par   go to state 418
    varref  go to state 419
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 420
    rargs   go to state 421


state 362

  140 Stmnt: varref R_RCV @23 . LT rargs GT

    LT  shift, and go to state 422


state 363

  109 Special: varref RCV @15 . rargs

    EVAL   shift, and go to state 415
    CONST  shift, and go to state 416
    NAME   shift, and go to state 116
    '-'    shift, and go to state 417
    '('    shift, and go to state 58

    l_par   go to state 418
    varref  go to state 419
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 420
    rargs   go to state 423


state 364

  138 Stmnt: varref RCV @22 . LT rargs GT

    LT  shift, and go to state 424


state 365

  142 Stmnt: varref O_SND @24 . margs

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 425
    ltl_expr  go to state 130
    margs     go to state 426
    arg       go to state 427


state 366

  111 Special: varref SND @16 . margs

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 425
    ltl_expr  go to state 130
    margs     go to state 428
    arg       go to state 427


state 367

   66 step: stmnt UNLESS @11 . stmnt

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 350
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 429
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 368

  115 Special: for_pre IN varref . r_par @18 for_post

    ')'  shift, and go to state 133

    r_par  go to state 430


state 369

  113 Special: for_pre ':' expr . DOTDOT expr r_par @17 for_post
  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    DOTDOT      shift, and go to state 431
    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234


state 370

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  194     | expr OR expr .
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  237 Expr: expr . AND Expr
  240     | expr . OR Expr

    AND         shift, and go to state 276
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 194 (expr)


state 371

  235 Expr: Expr . AND Expr
  236     | Expr . AND expr
  238     | Expr . OR Expr
  239     | Expr . OR expr
  240     | expr OR Expr .

    AND  shift, and go to state 278

    $default  reduce using rule 240 (Expr)


state 372

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  193     | expr AND expr .
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  237 Expr: expr . AND Expr
  240     | expr . OR Expr

    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 193 (expr)


state 373

  235 Expr: Expr . AND Expr
  236     | Expr . AND expr
  237     | expr AND Expr .
  238     | Expr . OR Expr
  239     | Expr . OR expr

    $default  reduce using rule 237 (Expr)


state 374

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  237 Expr: expr . AND Expr
  239     | Expr OR expr .
  240     | expr . OR Expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    AND         shift, and go to state 276
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 239 (Expr)


state 375

  235 Expr: Expr . AND Expr
  236     | Expr . AND expr
  238     | Expr . OR Expr
  238     | Expr OR Expr .
  239     | Expr . OR expr

    AND  shift, and go to state 278

    $default  reduce using rule 238 (Expr)


state 376

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  236 Expr: Expr AND expr .
  237     | expr . AND Expr
  240     | expr . OR Expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 236 (Expr)


state 377

  235 Expr: Expr . AND Expr
  235     | Expr AND Expr .
  236     | Expr . AND expr
  238     | Expr . OR Expr
  239     | Expr . OR expr

    $default  reduce using rule 235 (Expr)


state 378

   30 ltl_body: '{' full_expr OS '}' .

    $default  reduce using rule 30 (ltl_body)


state 379

   19 proc: inst proctype NAME @1 l_par decl r_par . @2 Opt_priority Opt_enabler body

    $default  reduce using rule 18 (@2)

    @2  go to state 432


state 380

   90 ch_init: '[' const_expr ']' . OF '{' typ_list '}'

    OF  shift, and go to state 433


state 381

   85 c_list: CONST ',' . c_list

    CONST  shift, and go to state 289

    c_list  go to state 434


state 382

   87 ivar: vardcl ASGN '{' c_list '}' .

    $default  reduce using rule 87 (ivar)


state 383

  202 expr: RUN aname @33 l_par . args r_par Opt_priority

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 254 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 435
    arg       go to state 132


state 384

  203 expr: LEN l_par varref r_par .

    $default  reduce using rule 203 (expr)


state 385

  204 expr: ENABLED l_par expr r_par .

    $default  reduce using rule 204 (expr)


state 386

  205 expr: GET_P l_par expr r_par .

    $default  reduce using rule 205 (expr)


state 387

  215 expr: PC_VAL l_par expr r_par .

    $default  reduce using rule 215 (expr)


state 388

   98 pfld: NAME @12 '[' expr . ']'
  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ']'         shift, and go to state 436


state 389

  216 expr: PNAME '[' expr ']' . '@' NAME
  217     | PNAME '[' expr ']' . ':' pfld

    ':'  shift, and go to state 437
    '@'  shift, and go to state 438


state 390

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  200     | l_par expr ARROW expr . ':' expr r_par
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ':'         shift, and go to state 439


state 391

  209 expr: varref R_RCV @35 '[' . rargs ']'

    EVAL   shift, and go to state 415
    CONST  shift, and go to state 416
    NAME   shift, and go to state 116
    '-'    shift, and go to state 417
    '('    shift, and go to state 58

    l_par   go to state 418
    varref  go to state 419
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 420
    rargs   go to state 440


state 392

  207 expr: varref RCV @34 '[' . rargs ']'

    EVAL   shift, and go to state 415
    CONST  shift, and go to state 416
    NAME   shift, and go to state 116
    '-'    shift, and go to state 417
    '('    shift, and go to state 58

    l_par   go to state 418
    varref  go to state 419
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 420
    rargs   go to state 441


state 393

  102 sfld: '.' cmpnd .

    $default  reduce using rule 102 (sfld)


state 394

  130 Stmnt: PRINT l_par STRING @20 . prargs r_par

    ','  shift, and go to state 442

    $default  reduce using rule 256 (prargs)

    prargs  go to state 443


state 395

  132 Stmnt: PRINTM l_par CONST r_par .

    $default  reduce using rule 132 (Stmnt)


state 396

  131 Stmnt: PRINTM l_par varref r_par .

    $default  reduce using rule 131 (Stmnt)


state 397

  253 two_args: expr ',' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 444
    ltl_expr  go to state 130


state 398

  128 Stmnt: SET_P l_par two_args r_par .

    $default  reduce using rule 128 (Stmnt)


state 399

   59 sequence: sequence . MS step
  161 option: SEP @32 sequence . OS

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 162 (OS)

    OS    go to state 445
    semi  go to state 263
    MS    go to state 264


state 400

  119 Special: DO @19 options OD .

    $default  reduce using rule 119 (Special)


state 401

  106 for_pre: FOR l_par @14 varref .

    $default  reduce using rule 106 (for_pre)


state 402

  116 Special: SELECT l_par varref ':' . expr DOTDOT expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 446
    ltl_expr  go to state 130


state 403

   59 sequence: sequence . MS step
  146 Stmnt: ATOMIC '{' @25 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 162 (OS)

    OS    go to state 447
    semi  go to state 263
    MS    go to state 264


state 404

   59 sequence: sequence . MS step
  148 Stmnt: D_STEP '{' @26 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 162 (OS)

    OS    go to state 448
    semi  go to state 263
    MS    go to state 264


state 405

  241 Probe: FULL l_par varref r_par .

    $default  reduce using rule 241 (Probe)


state 406

  243 Probe: EMPTY l_par varref r_par .

    $default  reduce using rule 243 (Probe)


state 407

  242 Probe: NFULL l_par varref r_par .

    $default  reduce using rule 242 (Probe)


state 408

  244 Probe: NEMPTY l_par varref r_par .

    $default  reduce using rule 244 (Probe)


state 409

   81 vref_lst: varref ',' vref_lst .

    $default  reduce using rule 81 (vref_lst)


state 410

  122 Special: NAME ':' . stmnt
  123        | NAME ':' .

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 350
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    SEMI    reduce using rule 123 (Special)
    ARROW   reduce using rule 123 (Special)
    FI      reduce using rule 123 (Special)
    OD      reduce using rule 123 (Special)
    SEP     reduce using rule 123 (Special)
    UNLESS  reduce using rule 123 (Special)
    '}'     reduce using rule 123 (Special)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 352
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 411

  153 Stmnt: INAME @28 l_par args . r_par @29 Stmnt

    ')'  shift, and go to state 133

    r_par  go to state 449


state 412

  150 Stmnt: '{' @27 sequence OS . '}'

    '}'  shift, and go to state 450


state 413

   57 body: '{' @9 sequence OS @10 '}' .

    $default  reduce using rule 57 (body)


state 414

  156 Stmnt: varref ASGN INAME @30 . l_par args r_par @31 Stmnt

    '('  shift, and go to state 58

    l_par  go to state 451


state 415

  263 rarg: EVAL . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 452


state 416

  264 rarg: CONST .

    $default  reduce using rule 264 (rarg)


state 417

  265 rarg: '-' . CONST

    CONST  shift, and go to state 453


state 418

  269 rargs: l_par . rargs r_par

    EVAL   shift, and go to state 415
    CONST  shift, and go to state 416
    NAME   shift, and go to state 116
    '-'    shift, and go to state 417
    '('    shift, and go to state 58

    l_par   go to state 418
    varref  go to state 419
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 420
    rargs   go to state 454


state 419

  262 rarg: varref .

    $default  reduce using rule 262 (rarg)


state 420

  266 rargs: rarg .
  267      | rarg . ',' rargs
  268      | rarg . l_par rargs r_par

    '('  shift, and go to state 58
    ','  shift, and go to state 455

    $default  reduce using rule 266 (rargs)

    l_par  go to state 456


state 421

  136 Stmnt: varref R_RCV @21 rargs .

    $default  reduce using rule 136 (Stmnt)


state 422

  140 Stmnt: varref R_RCV @23 LT . rargs GT

    EVAL   shift, and go to state 415
    CONST  shift, and go to state 416
    NAME   shift, and go to state 116
    '-'    shift, and go to state 417
    '('    shift, and go to state 58

    l_par   go to state 418
    varref  go to state 419
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 420
    rargs   go to state 457


state 423

  109 Special: varref RCV @15 rargs .

    $default  reduce using rule 109 (Special)


state 424

  138 Stmnt: varref RCV @22 LT . rargs GT

    EVAL   shift, and go to state 415
    CONST  shift, and go to state 416
    NAME   shift, and go to state 116
    '-'    shift, and go to state 417
    '('    shift, and go to state 58

    l_par   go to state 418
    varref  go to state 419
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 420
    rargs   go to state 458


state 425

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  259 margs: expr . l_par arg r_par
  260 arg: expr .
  261    | expr . ',' arg

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    '('         shift, and go to state 58
    ','         shift, and go to state 235

    $default  reduce using rule 260 (arg)

    l_par  go to state 459


state 426

  142 Stmnt: varref O_SND @24 margs .

    $default  reduce using rule 142 (Stmnt)


state 427

  258 margs: arg .

    $default  reduce using rule 258 (margs)


state 428

  111 Special: varref SND @16 margs .

    $default  reduce using rule 111 (Special)


state 429

   66 step: stmnt UNLESS @11 stmnt .

    $default  reduce using rule 66 (step)


state 430

  115 Special: for_pre IN varref r_par . @18 for_post

    $default  reduce using rule 114 (@18)

    @18  go to state 460


state 431

  113 Special: for_pre ':' expr DOTDOT . expr r_par @17 for_post

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 461
    ltl_expr  go to state 130


state 432

   19 proc: inst proctype NAME @1 l_par decl r_par @2 . Opt_priority Opt_enabler body

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 221 (Opt_priority)

    Opt_priority  go to state 462


state 433

   90 ch_init: '[' const_expr ']' OF . '{' typ_list '}'

    '{'  shift, and go to state 463


state 434

   85 c_list: CONST ',' c_list .

    $default  reduce using rule 85 (c_list)


state 435

  202 expr: RUN aname @33 l_par args . r_par Opt_priority

    ')'  shift, and go to state 133

    r_par  go to state 464


state 436

   98 pfld: NAME @12 '[' expr ']' .

    $default  reduce using rule 98 (pfld)


state 437

  217 expr: PNAME '[' expr ']' ':' . pfld

    NAME  shift, and go to state 116

    pfld  go to state 465


state 438

  216 expr: PNAME '[' expr ']' '@' . NAME

    NAME  shift, and go to state 466


state 439

  200 expr: l_par expr ARROW expr ':' . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 467
    ltl_expr  go to state 130


state 440

  209 expr: varref R_RCV @35 '[' rargs . ']'

    ']'  shift, and go to state 468


state 441

  207 expr: varref RCV @34 '[' rargs . ']'

    ']'  shift, and go to state 469


state 442

  257 prargs: ',' . arg

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    arg       go to state 470


state 443

  130 Stmnt: PRINT l_par STRING @20 prargs . r_par

    ')'  shift, and go to state 133

    r_par  go to state 471


state 444

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  253 two_args: expr ',' expr .

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 253 (two_args)


state 445

  161 option: SEP @32 sequence OS .

    $default  reduce using rule 161 (option)


state 446

  116 Special: SELECT l_par varref ':' expr . DOTDOT expr r_par
  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    DOTDOT      shift, and go to state 472
    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234


state 447

  146 Stmnt: ATOMIC '{' @25 sequence OS . '}'

    '}'  shift, and go to state 473


state 448

  148 Stmnt: D_STEP '{' @26 sequence OS . '}'

    '}'  shift, and go to state 474


state 449

  153 Stmnt: INAME @28 l_par args r_par . @29 Stmnt

    $default  reduce using rule 152 (@29)

    @29  go to state 475


state 450

  150 Stmnt: '{' @27 sequence OS '}' .

    $default  reduce using rule 150 (Stmnt)


state 451

  156 Stmnt: varref ASGN INAME @30 l_par . args r_par @31 Stmnt

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 254 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 476
    arg       go to state 132


state 452

  263 rarg: EVAL l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 477
    ltl_expr  go to state 130


state 453

  265 rarg: '-' CONST .

    $default  reduce using rule 265 (rarg)


state 454

  269 rargs: l_par rargs . r_par

    ')'  shift, and go to state 133

    r_par  go to state 478


state 455

  267 rargs: rarg ',' . rargs

    EVAL   shift, and go to state 415
    CONST  shift, and go to state 416
    NAME   shift, and go to state 116
    '-'    shift, and go to state 417
    '('    shift, and go to state 58

    l_par   go to state 418
    varref  go to state 419
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 420
    rargs   go to state 479


state 456

  268 rargs: rarg l_par . rargs r_par

    EVAL   shift, and go to state 415
    CONST  shift, and go to state 416
    NAME   shift, and go to state 116
    '-'    shift, and go to state 417
    '('    shift, and go to state 58

    l_par   go to state 418
    varref  go to state 419
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 420
    rargs   go to state 480


state 457

  140 Stmnt: varref R_RCV @23 LT rargs . GT

    GT  shift, and go to state 481


state 458

  138 Stmnt: varref RCV @22 LT rargs . GT

    GT  shift, and go to state 482


state 459

  259 margs: expr l_par . arg r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    arg       go to state 483


state 460

  115 Special: for_pre IN varref r_par @18 . for_post

    '{'  shift, and go to state 484

    for_post  go to state 485


state 461

  113 Special: for_pre ':' expr DOTDOT expr . r_par @17 for_post
  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 486


state 462

   19 proc: inst proctype NAME @1 l_par decl r_par @2 Opt_priority . Opt_enabler body

    PROVIDED  shift, and go to state 487

    $default  reduce using rule 245 (Opt_enabler)

    Opt_enabler  go to state 488


state 463

   90 ch_init: '[' const_expr ']' OF '{' . typ_list '}'

    error  shift, and go to state 489
    TYPE   shift, and go to state 490
    UNAME  shift, and go to state 491

    basetype  go to state 492
    typ_list  go to state 493


state 464

  202 expr: RUN aname @33 l_par args r_par . Opt_priority

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 221 (Opt_priority)

    Opt_priority  go to state 494


state 465

  217 expr: PNAME '[' expr ']' ':' pfld .

    $default  reduce using rule 217 (expr)


state 466

  216 expr: PNAME '[' expr ']' '@' NAME .

    $default  reduce using rule 216 (expr)


state 467

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  200     | l_par expr ARROW expr ':' expr . r_par
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 495


state 468

  209 expr: varref R_RCV @35 '[' rargs ']' .

    $default  reduce using rule 209 (expr)


state 469

  207 expr: varref RCV @34 '[' rargs ']' .

    $default  reduce using rule 207 (expr)


state 470

  257 prargs: ',' arg .

    $default  reduce using rule 257 (prargs)


state 471

  130 Stmnt: PRINT l_par STRING @20 prargs r_par .

    $default  reduce using rule 130 (Stmnt)


state 472

  116 Special: SELECT l_par varref ':' expr DOTDOT . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 496
    ltl_expr  go to state 130


state 473

  146 Stmnt: ATOMIC '{' @25 sequence OS '}' .

    $default  reduce using rule 146 (Stmnt)


state 474

  148 Stmnt: D_STEP '{' @26 sequence OS '}' .

    $default  reduce using rule 148 (Stmnt)


state 475

  153 Stmnt: INAME @28 l_par args r_par @29 . Stmnt

    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    ELSE         shift, and go to state 148
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 497
    pfld       go to state 127
    cmpnd      go to state 128
    Stmnt      go to state 498
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 476

  156 Stmnt: varref ASGN INAME @30 l_par args . r_par @31 Stmnt

    ')'  shift, and go to state 133

    r_par  go to state 499


state 477

  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr
  263 rarg: EVAL l_par expr . r_par

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 500


state 478

  269 rargs: l_par rargs r_par .

    $default  reduce using rule 269 (rargs)


state 479

  267 rargs: rarg ',' rargs .

    $default  reduce using rule 267 (rargs)


state 480

  268 rargs: rarg l_par rargs . r_par

    ')'  shift, and go to state 133

    r_par  go to state 501


state 481

  140 Stmnt: varref R_RCV @23 LT rargs GT .

    $default  reduce using rule 140 (Stmnt)


state 482

  138 Stmnt: varref RCV @22 LT rargs GT .

    $default  reduce using rule 138 (Stmnt)


state 483

  259 margs: expr l_par arg . r_par

    ')'  shift, and go to state 133

    r_par  go to state 502


state 484

  107 for_post: '{' . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 67 (vis)
    UNAME  reduce using rule 67 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 503
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 485

  115 Special: for_pre IN varref r_par @18 for_post .

    $default  reduce using rule 115 (Special)


state 486

  113 Special: for_pre ':' expr DOTDOT expr r_par . @17 for_post

    $default  reduce using rule 112 (@17)

    @17  go to state 504


state 487

  246 Opt_enabler: PROVIDED . l_par full_expr r_par
  247            | PROVIDED . error

    error  shift, and go to state 505
    '('    shift, and go to state 58

    l_par  go to state 506


state 488

   19 proc: inst proctype NAME @1 l_par decl r_par @2 Opt_priority Opt_enabler . body

    '{'  shift, and go to state 66

    body  go to state 507


state 489

  250 basetype: error .

    $default  reduce using rule 250 (basetype)


state 490

  248 basetype: TYPE .

    $default  reduce using rule 248 (basetype)


state 491

  249 basetype: UNAME .

    $default  reduce using rule 249 (basetype)


state 492

  251 typ_list: basetype .
  252         | basetype . ',' typ_list

    ','  shift, and go to state 508

    $default  reduce using rule 251 (typ_list)


state 493

   90 ch_init: '[' const_expr ']' OF '{' typ_list . '}'

    '}'  shift, and go to state 509


state 494

  202 expr: RUN aname @33 l_par args r_par Opt_priority .

    $default  reduce using rule 202 (expr)


state 495

  200 expr: l_par expr ARROW expr ':' expr r_par .

    $default  reduce using rule 200 (expr)


state 496

  116 Special: SELECT l_par varref ':' expr DOTDOT expr . r_par
  179 expr: expr . '+' expr
  180     | expr . '-' expr
  181     | expr . '*' expr
  182     | expr . '/' expr
  183     | expr . '%' expr
  184     | expr . '&' expr
  185     | expr . '^' expr
  186     | expr . '|' expr
  187     | expr . GT expr
  188     | expr . LT expr
  189     | expr . GE expr
  190     | expr . LE expr
  191     | expr . EQ expr
  192     | expr . NE expr
  193     | expr . AND expr
  194     | expr . OR expr
  195     | expr . LSHIFT expr
  196     | expr . RSHIFT expr
  225 ltl_expr: expr . UNTIL expr
  226         | expr . RELEASE expr
  227         | expr . WEAK_UNTIL expr
  228         | expr . IMPLIES expr
  229         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 510


state 497

  125 Stmnt: varref . ASGN full_expr
  126      | varref . INCR
  127      | varref . DECR
  136      | varref . R_RCV @21 rargs
  138      | varref . RCV @22 LT rargs GT
  140      | varref . R_RCV @23 LT rargs GT
  142      | varref . O_SND @24 margs
  156      | varref . ASGN INAME @30 l_par args r_par @31 Stmnt
  207 expr: varref . RCV @34 '[' rargs ']'
  209     | varref . R_RCV @35 '[' rargs ']'
  210     | varref .

    ASGN   shift, and go to state 265
    R_RCV  shift, and go to state 266
    RCV    shift, and go to state 511
    O_SND  shift, and go to state 268
    DECR   shift, and go to state 270
    INCR   shift, and go to state 271

    $default  reduce using rule 210 (expr)


state 498

  153 Stmnt: INAME @28 l_par args r_par @29 Stmnt .

    $default  reduce using rule 153 (Stmnt)


state 499

  156 Stmnt: varref ASGN INAME @30 l_par args r_par . @31 Stmnt

    $default  reduce using rule 155 (@31)

    @31  go to state 512


state 500

  263 rarg: EVAL l_par expr r_par .

    $default  reduce using rule 263 (rarg)


state 501

  268 rargs: rarg l_par rargs r_par .

    $default  reduce using rule 268 (rargs)


state 502

  259 margs: expr l_par arg r_par .

    $default  reduce using rule 259 (margs)


state 503

   59 sequence: sequence . MS step
  107 for_post: '{' sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 162 (OS)

    OS    go to state 513
    semi  go to state 263
    MS    go to state 264


state 504

  113 Special: for_pre ':' expr DOTDOT expr r_par @17 . for_post

    '{'  shift, and go to state 484

    for_post  go to state 514


state 505

  247 Opt_enabler: PROVIDED error .

    $default  reduce using rule 247 (Opt_enabler)


state 506

  246 Opt_enabler: PROVIDED l_par . full_expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 515
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 507

   19 proc: inst proctype NAME @1 l_par decl r_par @2 Opt_priority Opt_enabler body .

    $default  reduce using rule 19 (proc)


state 508

  252 typ_list: basetype ',' . typ_list

    error  shift, and go to state 489
    TYPE   shift, and go to state 490
    UNAME  shift, and go to state 491

    basetype  go to state 492
    typ_list  go to state 516


state 509

   90 ch_init: '[' const_expr ']' OF '{' typ_list '}' .

    $default  reduce using rule 90 (ch_init)


state 510

  116 Special: SELECT l_par varref ':' expr DOTDOT expr r_par .

    $default  reduce using rule 116 (Special)


state 511

  138 Stmnt: varref RCV . @22 LT rargs GT
  207 expr: varref RCV . @34 '[' rargs ']'

    '['       reduce using rule 206 (@34)
    $default  reduce using rule 137 (@22)

    @22  go to state 364
    @34  go to state 304


state 512

  156 Stmnt: varref ASGN INAME @30 l_par args r_par @31 . Stmnt

    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    ELSE         shift, and go to state 148
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 497
    pfld       go to state 127
    cmpnd      go to state 128
    Stmnt      go to state 517
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 513

  107 for_post: '{' sequence OS . '}'

    '}'  shift, and go to state 518


state 514

  113 Special: for_pre ':' expr DOTDOT expr r_par @17 for_post .

    $default  reduce using rule 113 (Special)


state 515

  246 Opt_enabler: PROVIDED l_par full_expr . r_par

    ')'  shift, and go to state 133

    r_par  go to state 519


state 516

  252 typ_list: basetype ',' typ_list .

    $default  reduce using rule 252 (typ_list)


state 517

  156 Stmnt: varref ASGN INAME @30 l_par args r_par @31 Stmnt .

    $default  reduce using rule 156 (Stmnt)


state 518

  107 for_post: '{' sequence OS '}' .

    $default  reduce using rule 107 (for_post)


state 519

  246 Opt_enabler: PROVIDED l_par full_expr r_par .

    $default  reduce using rule 246 (Opt_enabler)
